plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}

group = 'com.cliabhach'
version = '1.0'


kotlin {
    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = '14'
        }
        withJava()
        testRuns["test"].executionTask.configure {
            useJUnitPlatform()
        }
    }
    js(IR) {
        browser {
            commonWebpackConfig {
                cssSupport.enabled = true
            }
        }
    }
    def hostOs = System.getProperty("os.name")
    def isMingwX64 = hostOs.startsWith("Windows")
    def nativeTarget
    if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")

    
    sourceSets {
        commonMain {

        }
        commonTest {
            dependencies {
                // Commented out as per https://youtrack.jetbrains.com/issue/KTIJ-16821 and
                // https://kotlinlang.org/docs/gradle.html#set-dependencies-on-test-libraries .
                //
                // Shame that the type inference for JetBrains' 'kotlin()' function is so bad.
                //implementation kotlin('test')
            }
        }
        jvmMain {

        }
        jvmTest {

        }
        jsMain {

        }
        jsTest {

        }
        nativeMain {

        }
        nativeTest {

        }
    }
}
